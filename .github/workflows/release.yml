name: Build and Release

on:
  push:
    branches:
      - "release/v*.*.*"
    tags-ignore:
      - "v*.*.*-*"
  workflow_dispatch:

env:
  DOCKER_CLI_EXPERIMENTAL: enabled
  DOCKER_PLATFORMS: linux/amd64,linux/amd64/v2,linux/amd64/v3,linux/arm32/v5,linux/arm32/v6,linux/arm32/v7,linux/arm64,linux/i386,linux/ppc64le,linux/riscv64,linux/s390x
  QEMU_PLATFORMS: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/riscv64,linux/s390x

  DATE_STRING: set at runtime
  GIT_TAG: set at runtime
  VERSION: set at runtime

jobs:
  frontend:
    name: Build front-end
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
        with:
          fetch-depth: 0

      - name: Setup Task
        uses: jaxxstorm/action-install-gh-release@c5ead9a448b4660cf1e7866ee22e4dc56538031a
        with:
          repo: go-task/task
          cache: enable
          tag: "v3.33.1"

      - name: Setup pnpm
        uses: pnpm/action-setup@d882d12c64e032187b2edb46d3a0d003b7a43598
        with:
          version: 8

      - name: Setup Node
        uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8
        with:
          node-version: 20
          cache: pnpm
          cache-dependency-path: "memos-upstream/web/pnpm-lock.yaml"

      - name: Setup Git and Env vars
        shell: bash
        run: task ci:release:setup-git

      - name: Cache front-end build
        uses: actions/cache@e12d46a63a90f2fae62d114769bbf2a179198b5c
        with:
          path: |
            build/frontend
            .task/checksum/build-frontend
          key: |
            frontend-${{ env.DATE_STRING }}
          restore-keys: |
            frontend-

      - name: Build front-end
        run: |
          task git:subtree:pull-tag -- "${{env.GIT_TAG}}" || true
          task build:frontend

      - name: Upload front-end build
        uses: actions/upload-artifact@694cdabd8bdb0f10b2cea11669e1bf5453eed0a6
        with:
          name: frontend_${{env.GIT_TAG}}
          path: build/frontend/
          if-no-files-found: error

  goreleaser:
    name: Build back-end and Release
    runs-on: ubuntu-22.04
    permissions:
      actions: read
      contents: write
      discussions: write
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
        with:
          fetch-depth: 0

      - name: Setup buf
        uses: bufbuild/buf-setup-action@382440cdb8ec7bc25a68d7b4711163d95f7cc3aa
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          version: 1.28.1

      - name: Setup Task
        uses: jaxxstorm/action-install-gh-release@c5ead9a448b4660cf1e7866ee22e4dc56538031a
        with:
          repo: go-task/task
          cache: enable
          tag: "v3.33.1"

      - name: Setup UPX
        uses: crazy-max/ghaction-upx@0fc45e912669ba9e8fa2b430e97c8da2a632e29b
        with:
          install-only: true

      - name: Setup Go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491
        with:
          go-version: ">=1.21.5"
          check-latest: true
          cache-dependency-path: memos-upstream/go.sum

      - name: Setup Git and Env vars
        shell: bash
        run: task ci:release:setup-git

      ### Front-end ###
      - name: Wait for front-end build to finish
        uses: yogeshlonkar/wait-for-jobs@62dd636cfcd6eefad75887c78f1e1c291a8d13d2
        with:
          jobs: "Build front-end"
          interval: "2000"
          ttl: "10"

      - name: Download front-end build
        uses: actions/download-artifact@6b208ae046db98c579e8a3aa621ab581ff575935
        with:
          name: frontend_${{env.GIT_TAG}}
          path: build/frontend/
      ### /Front-end ###

      - name: Pre-build requirements
        run: |
          task build:backend-tidy
          cd ./memos-upstream/proto && buf generate

      - name: Build and release with Goreleaser
        uses: goreleaser/goreleaser-action@7ec5c2b0c6cdda6e8bbb49444bc797dd33d74dd8
        with:
          distribution: goreleaser
          version: latest
          args: release --clean --timeout 60m
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      ### Docker ###
      - name: Rename builds to Docker format
        run: |
          task pre-docker:rename-builds

      - name: Setup QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3
        with:
          platforms: ${{ env.QEMU_PLATFORMS }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226
        with:
          version: latest
          install: true
          platforms: ${{ env.DOCKER_PLATFORMS }}

      - name: Log-in to Docker Hub
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          username: lincolnthalles
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Log-in to GitHub's Container registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@dbef88086f6cef02e264edb7dbf63250c17cef6c
        with:
          images: |
            lincolnthalles/memos
            ghcr.io/lincolnthalles/memos-builds
          tags: |
            type=raw,value=latest
            type=semver,pattern={{version}},value=${{ env.VERSION }}
            type=semver,pattern={{major}}.{{minor}},value=${{ env.VERSION }}

      - name: Build and Push Docker images
        id: docker_build
        uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56
        with:
          context: ./
          file: ./docker/Dockerfile
          platforms: ${{ env.DOCKER_PLATFORMS }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
      ### /Docker ###
